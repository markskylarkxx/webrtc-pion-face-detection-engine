// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inference.proto
// Protobuf C++ Version: 6.32.1

#ifndef inference_2eproto_2epb_2eh
#define inference_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_inference_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_inference_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_inference_2eproto;
}  // extern "C"
namespace inference {
class BoundingBox;
struct BoundingBoxDefaultTypeInternal;
extern BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BoundingBox_class_data_;
class DetectionResponse;
struct DetectionResponseDefaultTypeInternal;
extern DetectionResponseDefaultTypeInternal _DetectionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DetectionResponse_class_data_;
class FrameRequest;
struct FrameRequestDefaultTypeInternal;
extern FrameRequestDefaultTypeInternal _FrameRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FrameRequest_class_data_;
}  // namespace inference
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace inference {

// ===================================================================


// -------------------------------------------------------------------

class FrameRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:inference.FrameRequest) */ {
 public:
  inline FrameRequest() : FrameRequest(nullptr) {}
  ~FrameRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FrameRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FrameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FrameRequest(::google::protobuf::internal::ConstantInitialized);

  inline FrameRequest(const FrameRequest& from) : FrameRequest(nullptr, from) {}
  inline FrameRequest(FrameRequest&& from) noexcept
      : FrameRequest(nullptr, ::std::move(from)) {}
  inline FrameRequest& operator=(const FrameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrameRequest& operator=(FrameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrameRequest& default_instance() {
    return *reinterpret_cast<const FrameRequest*>(
        &_FrameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FrameRequest& a, FrameRequest& b) { a.Swap(&b); }
  inline void Swap(FrameRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrameRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrameRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FrameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FrameRequest& from) { FrameRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FrameRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "inference.FrameRequest"; }

 protected:
  explicit FrameRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FrameRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FrameRequest& from);
  FrameRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FrameRequest&& from) noexcept
      : FrameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEncodedFrameFieldNumber = 1,
    kCodecFieldNumber = 2,
    kFrameIdFieldNumber = 4,
    kTimestampFieldNumber = 3,
    kWidthFieldNumber = 5,
    kHeightFieldNumber = 6,
    kChannelsFieldNumber = 7,
  };
  // bytes encoded_frame = 1;
  void clear_encoded_frame() ;
  const ::std::string& encoded_frame() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_encoded_frame(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_encoded_frame();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_encoded_frame();
  void set_allocated_encoded_frame(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_encoded_frame() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_encoded_frame(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_encoded_frame();

  public:
  // string codec = 2;
  void clear_codec() ;
  const ::std::string& codec() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_codec(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_codec();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_codec();
  void set_allocated_codec(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_codec() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_codec(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_codec();

  public:
  // string frame_id = 4;
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // int64 timestamp = 3;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 width = 5;
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 height = 6;
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // int32 channels = 7;
  void clear_channels() ;
  ::int32_t channels() const;
  void set_channels(::int32_t value);

  private:
  ::int32_t _internal_channels() const;
  void _internal_set_channels(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:inference.FrameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FrameRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr encoded_frame_;
    ::google::protobuf::internal::ArenaStringPtr codec_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::int64_t timestamp_;
    ::int32_t width_;
    ::int32_t height_;
    ::int32_t channels_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inference_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FrameRequest_class_data_;
// -------------------------------------------------------------------

class BoundingBox final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:inference.BoundingBox) */ {
 public:
  inline BoundingBox() : BoundingBox(nullptr) {}
  ~BoundingBox() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BoundingBox* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BoundingBox));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BoundingBox(::google::protobuf::internal::ConstantInitialized);

  inline BoundingBox(const BoundingBox& from) : BoundingBox(nullptr, from) {}
  inline BoundingBox(BoundingBox&& from) noexcept
      : BoundingBox(nullptr, ::std::move(from)) {}
  inline BoundingBox& operator=(const BoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoundingBox& operator=(BoundingBox&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoundingBox& default_instance() {
    return *reinterpret_cast<const BoundingBox*>(
        &_BoundingBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BoundingBox& a, BoundingBox& b) { a.Swap(&b); }
  inline void Swap(BoundingBox* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoundingBox* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BoundingBox* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BoundingBox>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BoundingBox& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BoundingBox& from) { BoundingBox::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BoundingBox* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "inference.BoundingBox"; }

 protected:
  explicit BoundingBox(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BoundingBox(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BoundingBox& from);
  BoundingBox(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BoundingBox&& from) noexcept
      : BoundingBox(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
    kConfidenceFieldNumber = 5,
  };
  // int32 x = 1;
  void clear_x() ;
  ::int32_t x() const;
  void set_x(::int32_t value);

  private:
  ::int32_t _internal_x() const;
  void _internal_set_x(::int32_t value);

  public:
  // int32 y = 2;
  void clear_y() ;
  ::int32_t y() const;
  void set_y(::int32_t value);

  private:
  ::int32_t _internal_y() const;
  void _internal_set_y(::int32_t value);

  public:
  // int32 width = 3;
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 height = 4;
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // float confidence = 5;
  void clear_confidence() ;
  float confidence() const;
  void set_confidence(float value);

  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);

  public:
  // @@protoc_insertion_point(class_scope:inference.BoundingBox)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BoundingBox& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t x_;
    ::int32_t y_;
    ::int32_t width_;
    ::int32_t height_;
    float confidence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inference_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BoundingBox_class_data_;
// -------------------------------------------------------------------

class DetectionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:inference.DetectionResponse) */ {
 public:
  inline DetectionResponse() : DetectionResponse(nullptr) {}
  ~DetectionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DetectionResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DetectionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DetectionResponse(::google::protobuf::internal::ConstantInitialized);

  inline DetectionResponse(const DetectionResponse& from) : DetectionResponse(nullptr, from) {}
  inline DetectionResponse(DetectionResponse&& from) noexcept
      : DetectionResponse(nullptr, ::std::move(from)) {}
  inline DetectionResponse& operator=(const DetectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DetectionResponse& operator=(DetectionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DetectionResponse& default_instance() {
    return *reinterpret_cast<const DetectionResponse*>(
        &_DetectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DetectionResponse& a, DetectionResponse& b) { a.Swap(&b); }
  inline void Swap(DetectionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DetectionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DetectionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DetectionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DetectionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DetectionResponse& from) { DetectionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DetectionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "inference.DetectionResponse"; }

 protected:
  explicit DetectionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DetectionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DetectionResponse& from);
  DetectionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DetectionResponse&& from) noexcept
      : DetectionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFacesFieldNumber = 1,
    kFrameIdFieldNumber = 3,
    kTimestampFieldNumber = 2,
    kProcessingTimeMsFieldNumber = 4,
  };
  // repeated .inference.BoundingBox faces = 1;
  int faces_size() const;
  private:
  int _internal_faces_size() const;

  public:
  void clear_faces() ;
  ::inference::BoundingBox* PROTOBUF_NONNULL mutable_faces(int index);
  ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>* PROTOBUF_NONNULL mutable_faces();

  private:
  const ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>& _internal_faces() const;
  ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>* PROTOBUF_NONNULL _internal_mutable_faces();
  public:
  const ::inference::BoundingBox& faces(int index) const;
  ::inference::BoundingBox* PROTOBUF_NONNULL add_faces();
  const ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>& faces() const;
  // string frame_id = 3;
  void clear_frame_id() ;
  const ::std::string& frame_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frame_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frame_id();
  void set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frame_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frame_id();

  public:
  // int64 timestamp = 2;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int64 processing_time_ms = 4;
  void clear_processing_time_ms() ;
  ::int64_t processing_time_ms() const;
  void set_processing_time_ms(::int64_t value);

  private:
  ::int64_t _internal_processing_time_ms() const;
  void _internal_set_processing_time_ms(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:inference.DetectionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DetectionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::inference::BoundingBox > faces_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::int64_t timestamp_;
    ::int64_t processing_time_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_inference_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DetectionResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FrameRequest

// bytes encoded_frame = 1;
inline void FrameRequest::clear_encoded_frame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoded_frame_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& FrameRequest::encoded_frame() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.encoded_frame)
  return _internal_encoded_frame();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FrameRequest::set_encoded_frame(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.encoded_frame_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:inference.FrameRequest.encoded_frame)
}
inline ::std::string* PROTOBUF_NONNULL FrameRequest::mutable_encoded_frame()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_encoded_frame();
  // @@protoc_insertion_point(field_mutable:inference.FrameRequest.encoded_frame)
  return _s;
}
inline const ::std::string& FrameRequest::_internal_encoded_frame() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encoded_frame_.Get();
}
inline void FrameRequest::_internal_set_encoded_frame(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.encoded_frame_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FrameRequest::_internal_mutable_encoded_frame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.encoded_frame_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FrameRequest::release_encoded_frame() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:inference.FrameRequest.encoded_frame)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.encoded_frame_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.encoded_frame_.Set("", GetArena());
  }
  return released;
}
inline void FrameRequest::set_allocated_encoded_frame(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.encoded_frame_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encoded_frame_.IsDefault()) {
    _impl_.encoded_frame_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:inference.FrameRequest.encoded_frame)
}

// string codec = 2;
inline void FrameRequest::clear_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codec_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& FrameRequest::codec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.codec)
  return _internal_codec();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FrameRequest::set_codec(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.codec_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:inference.FrameRequest.codec)
}
inline ::std::string* PROTOBUF_NONNULL FrameRequest::mutable_codec()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_codec();
  // @@protoc_insertion_point(field_mutable:inference.FrameRequest.codec)
  return _s;
}
inline const ::std::string& FrameRequest::_internal_codec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.codec_.Get();
}
inline void FrameRequest::_internal_set_codec(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.codec_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FrameRequest::_internal_mutable_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.codec_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FrameRequest::release_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:inference.FrameRequest.codec)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.codec_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.codec_.Set("", GetArena());
  }
  return released;
}
inline void FrameRequest::set_allocated_codec(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.codec_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.codec_.IsDefault()) {
    _impl_.codec_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:inference.FrameRequest.codec)
}

// int64 timestamp = 3;
inline void FrameRequest::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int64_t FrameRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.timestamp)
  return _internal_timestamp();
}
inline void FrameRequest::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:inference.FrameRequest.timestamp)
}
inline ::int64_t FrameRequest::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void FrameRequest::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string frame_id = 4;
inline void FrameRequest::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& FrameRequest::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FrameRequest::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:inference.FrameRequest.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL FrameRequest::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:inference.FrameRequest.frame_id)
  return _s;
}
inline const ::std::string& FrameRequest::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void FrameRequest::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FrameRequest::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FrameRequest::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:inference.FrameRequest.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void FrameRequest::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:inference.FrameRequest.frame_id)
}

// int32 width = 5;
inline void FrameRequest::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t FrameRequest::width() const {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.width)
  return _internal_width();
}
inline void FrameRequest::set_width(::int32_t value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:inference.FrameRequest.width)
}
inline ::int32_t FrameRequest::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void FrameRequest::_internal_set_width(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// int32 height = 6;
inline void FrameRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::int32_t FrameRequest::height() const {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.height)
  return _internal_height();
}
inline void FrameRequest::set_height(::int32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:inference.FrameRequest.height)
}
inline ::int32_t FrameRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void FrameRequest::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// int32 channels = 7;
inline void FrameRequest::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::int32_t FrameRequest::channels() const {
  // @@protoc_insertion_point(field_get:inference.FrameRequest.channels)
  return _internal_channels();
}
inline void FrameRequest::set_channels(::int32_t value) {
  _internal_set_channels(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:inference.FrameRequest.channels)
}
inline ::int32_t FrameRequest::_internal_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_;
}
inline void FrameRequest::_internal_set_channels(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_ = value;
}

// -------------------------------------------------------------------

// BoundingBox

// int32 x = 1;
inline void BoundingBox::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int32_t BoundingBox::x() const {
  // @@protoc_insertion_point(field_get:inference.BoundingBox.x)
  return _internal_x();
}
inline void BoundingBox::set_x(::int32_t value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:inference.BoundingBox.x)
}
inline ::int32_t BoundingBox::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void BoundingBox::_internal_set_x(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// int32 y = 2;
inline void BoundingBox::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t BoundingBox::y() const {
  // @@protoc_insertion_point(field_get:inference.BoundingBox.y)
  return _internal_y();
}
inline void BoundingBox::set_y(::int32_t value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:inference.BoundingBox.y)
}
inline ::int32_t BoundingBox::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void BoundingBox::_internal_set_y(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// int32 width = 3;
inline void BoundingBox::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t BoundingBox::width() const {
  // @@protoc_insertion_point(field_get:inference.BoundingBox.width)
  return _internal_width();
}
inline void BoundingBox::set_width(::int32_t value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:inference.BoundingBox.width)
}
inline ::int32_t BoundingBox::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void BoundingBox::_internal_set_width(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// int32 height = 4;
inline void BoundingBox::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t BoundingBox::height() const {
  // @@protoc_insertion_point(field_get:inference.BoundingBox.height)
  return _internal_height();
}
inline void BoundingBox::set_height(::int32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:inference.BoundingBox.height)
}
inline ::int32_t BoundingBox::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void BoundingBox::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// float confidence = 5;
inline void BoundingBox::clear_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline float BoundingBox::confidence() const {
  // @@protoc_insertion_point(field_get:inference.BoundingBox.confidence)
  return _internal_confidence();
}
inline void BoundingBox::set_confidence(float value) {
  _internal_set_confidence(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:inference.BoundingBox.confidence)
}
inline float BoundingBox::_internal_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confidence_;
}
inline void BoundingBox::_internal_set_confidence(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confidence_ = value;
}

// -------------------------------------------------------------------

// DetectionResponse

// repeated .inference.BoundingBox faces = 1;
inline int DetectionResponse::_internal_faces_size() const {
  return _internal_faces().size();
}
inline int DetectionResponse::faces_size() const {
  return _internal_faces_size();
}
inline void DetectionResponse::clear_faces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.faces_.Clear();
}
inline ::inference::BoundingBox* PROTOBUF_NONNULL DetectionResponse::mutable_faces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:inference.DetectionResponse.faces)
  return _internal_mutable_faces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>* PROTOBUF_NONNULL DetectionResponse::mutable_faces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:inference.DetectionResponse.faces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_faces();
}
inline const ::inference::BoundingBox& DetectionResponse::faces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:inference.DetectionResponse.faces)
  return _internal_faces().Get(index);
}
inline ::inference::BoundingBox* PROTOBUF_NONNULL DetectionResponse::add_faces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::inference::BoundingBox* _add = _internal_mutable_faces()->Add();
  // @@protoc_insertion_point(field_add:inference.DetectionResponse.faces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>& DetectionResponse::faces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:inference.DetectionResponse.faces)
  return _internal_faces();
}
inline const ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>&
DetectionResponse::_internal_faces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.faces_;
}
inline ::google::protobuf::RepeatedPtrField<::inference::BoundingBox>* PROTOBUF_NONNULL
DetectionResponse::_internal_mutable_faces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.faces_;
}

// int64 timestamp = 2;
inline void DetectionResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int64_t DetectionResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:inference.DetectionResponse.timestamp)
  return _internal_timestamp();
}
inline void DetectionResponse::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:inference.DetectionResponse.timestamp)
}
inline ::int64_t DetectionResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void DetectionResponse::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string frame_id = 3;
inline void DetectionResponse::clear_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& DetectionResponse::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:inference.DetectionResponse.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DetectionResponse::set_frame_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:inference.DetectionResponse.frame_id)
}
inline ::std::string* PROTOBUF_NONNULL DetectionResponse::mutable_frame_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:inference.DetectionResponse.frame_id)
  return _s;
}
inline const ::std::string& DetectionResponse::_internal_frame_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_id_.Get();
}
inline void DetectionResponse::_internal_set_frame_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.frame_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DetectionResponse::_internal_mutable_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DetectionResponse::release_frame_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:inference.DetectionResponse.frame_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.frame_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  return released;
}
inline void DetectionResponse::set_allocated_frame_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.frame_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frame_id_.IsDefault()) {
    _impl_.frame_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:inference.DetectionResponse.frame_id)
}

// int64 processing_time_ms = 4;
inline void DetectionResponse::clear_processing_time_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_time_ms_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t DetectionResponse::processing_time_ms() const {
  // @@protoc_insertion_point(field_get:inference.DetectionResponse.processing_time_ms)
  return _internal_processing_time_ms();
}
inline void DetectionResponse::set_processing_time_ms(::int64_t value) {
  _internal_set_processing_time_ms(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:inference.DetectionResponse.processing_time_ms)
}
inline ::int64_t DetectionResponse::_internal_processing_time_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.processing_time_ms_;
}
inline void DetectionResponse::_internal_set_processing_time_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.processing_time_ms_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace inference


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // inference_2eproto_2epb_2eh
