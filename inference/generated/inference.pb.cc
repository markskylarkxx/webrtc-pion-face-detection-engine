// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: inference.proto
// Protobuf C++ Version: 6.32.1

#include "inference.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace inference {

inline constexpr FrameRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        encoded_frame_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        codec_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR FrameRequest::FrameRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FrameRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameRequestDefaultTypeInternal() {}
  union {
    FrameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameRequestDefaultTypeInternal _FrameRequest_default_instance_;

inline constexpr BoundingBox::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        width_{0},
        height_{0},
        confidence_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BoundingBox::BoundingBox(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BoundingBox_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BoundingBoxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoundingBoxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoundingBoxDefaultTypeInternal() {}
  union {
    BoundingBox _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;

inline constexpr DetectionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        faces_{},
        frame_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        processing_time_ms_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR DetectionResponse::DetectionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DetectionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DetectionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DetectionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DetectionResponseDefaultTypeInternal() {}
  union {
    DetectionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DetectionResponseDefaultTypeInternal _DetectionResponse_default_instance_;
}  // namespace inference
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_inference_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_inference_2eproto = nullptr;
const ::uint32_t
    TableStruct_inference_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::inference::FrameRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::inference::FrameRequest, _impl_.encoded_frame_),
        PROTOBUF_FIELD_OFFSET(::inference::FrameRequest, _impl_.codec_),
        PROTOBUF_FIELD_OFFSET(::inference::FrameRequest, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::inference::FrameRequest, _impl_.frame_id_),
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::inference::BoundingBox, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::inference::BoundingBox, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::inference::BoundingBox, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::inference::BoundingBox, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::inference::BoundingBox, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::inference::BoundingBox, _impl_.confidence_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::inference::DetectionResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::inference::DetectionResponse, _impl_.faces_),
        PROTOBUF_FIELD_OFFSET(::inference::DetectionResponse, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::inference::DetectionResponse, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::inference::DetectionResponse, _impl_.processing_time_ms_),
        ~0u,
        1,
        0,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::inference::FrameRequest)},
        {11, sizeof(::inference::BoundingBox)},
        {24, sizeof(::inference::DetectionResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::inference::_FrameRequest_default_instance_._instance,
    &::inference::_BoundingBox_default_instance_._instance,
    &::inference::_DetectionResponse_default_instance_._instance,
};
const char descriptor_table_protodef_inference_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017inference.proto\022\tinference\"Y\n\014FrameReq"
    "uest\022\025\n\rencoded_frame\030\001 \001(\014\022\r\n\005codec\030\002 \001"
    "(\t\022\021\n\ttimestamp\030\003 \001(\003\022\020\n\010frame_id\030\004 \001(\t\""
    "V\n\013BoundingBox\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005"
    "width\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\022\n\nconfidenc"
    "e\030\005 \001(\002\"{\n\021DetectionResponse\022%\n\005faces\030\001 "
    "\003(\0132\026.inference.BoundingBox\022\021\n\ttimestamp"
    "\030\002 \001(\003\022\020\n\010frame_id\030\003 \001(\t\022\032\n\022processing_t"
    "ime_ms\030\004 \001(\0032U\n\rFaceDetection\022D\n\013DetectF"
    "aces\022\027.inference.FrameRequest\032\034.inferenc"
    "e.DetectionResponseB\"Z webrtc-pion-face-"
    "engine/proto;pbb\006proto3"
};
static ::absl::once_flag descriptor_table_inference_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_inference_2eproto = {
    false,
    false,
    463,
    descriptor_table_protodef_inference_2eproto,
    "inference.proto",
    &descriptor_table_inference_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_inference_2eproto::offsets,
    file_level_enum_descriptors_inference_2eproto,
    file_level_service_descriptors_inference_2eproto,
};
namespace inference {
// ===================================================================

class FrameRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FrameRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_._has_bits_);
};

FrameRequest::FrameRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrameRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:inference.FrameRequest)
}
PROTOBUF_NDEBUG_INLINE FrameRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::inference::FrameRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        encoded_frame_(arena, from.encoded_frame_),
        codec_(arena, from.codec_),
        frame_id_(arena, from.frame_id_) {}

FrameRequest::FrameRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FrameRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrameRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrameRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:inference.FrameRequest)
}
PROTOBUF_NDEBUG_INLINE FrameRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        encoded_frame_(arena),
        codec_(arena),
        frame_id_(arena) {}

inline void FrameRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
FrameRequest::~FrameRequest() {
  // @@protoc_insertion_point(destructor:inference.FrameRequest)
  SharedDtor(*this);
}
inline void FrameRequest::SharedDtor(MessageLite& self) {
  FrameRequest& this_ = static_cast<FrameRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.encoded_frame_.Destroy();
  this_._impl_.codec_.Destroy();
  this_._impl_.frame_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FrameRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FrameRequest(arena);
}
constexpr auto FrameRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FrameRequest),
                                            alignof(FrameRequest));
}
constexpr auto FrameRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FrameRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FrameRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FrameRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FrameRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FrameRequest>(), &FrameRequest::ByteSizeLong,
              &FrameRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_._cached_size_),
          false,
      },
      &FrameRequest::kDescriptorMethods,
      &descriptor_table_inference_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FrameRequest_class_data_ =
        FrameRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FrameRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FrameRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FrameRequest_class_data_.tc_table);
  return FrameRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2>
FrameRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FrameRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::FrameRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string frame_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.frame_id_)}},
    // bytes encoded_frame = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.encoded_frame_)}},
    // string codec = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.codec_)}},
    // int64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FrameRequest, _impl_.timestamp_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes encoded_frame = 1;
    {PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.encoded_frame_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string codec = 2;
    {PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.codec_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.timestamp_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string frame_id = 4;
    {PROTOBUF_FIELD_OFFSET(FrameRequest, _impl_.frame_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\5\0\10\0\0\0"
    "inference.FrameRequest"
    "codec"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void FrameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.FrameRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.encoded_frame_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.codec_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.frame_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FrameRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FrameRequest& this_ = static_cast<const FrameRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FrameRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FrameRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:inference.FrameRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes encoded_frame = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_encoded_frame().empty()) {
      const ::std::string& _s = this_._internal_encoded_frame();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // string codec = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_codec().empty()) {
      const ::std::string& _s = this_._internal_codec();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.FrameRequest.codec");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 timestamp = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // string frame_id = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.FrameRequest.frame_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.FrameRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FrameRequest::ByteSizeLong(const MessageLite& base) {
  const FrameRequest& this_ = static_cast<const FrameRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FrameRequest::ByteSizeLong() const {
  const FrameRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:inference.FrameRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // bytes encoded_frame = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_encoded_frame().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_encoded_frame());
      }
    }
    // string codec = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_codec().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_codec());
      }
    }
    // string frame_id = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // int64 timestamp = 3;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FrameRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrameRequest*>(&to_msg);
  auto& from = static_cast<const FrameRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.FrameRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_encoded_frame().empty()) {
        _this->_internal_set_encoded_frame(from._internal_encoded_frame());
      } else {
        if (_this->_impl_.encoded_frame_.IsDefault()) {
          _this->_internal_set_encoded_frame("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_codec().empty()) {
        _this->_internal_set_codec(from._internal_codec());
      } else {
        if (_this->_impl_.codec_.IsDefault()) {
          _this->_internal_set_codec("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrameRequest::CopyFrom(const FrameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.FrameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrameRequest::InternalSwap(FrameRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encoded_frame_, &other->_impl_.encoded_frame_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codec_, &other->_impl_.codec_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata FrameRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BoundingBox::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BoundingBox>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_._has_bits_);
};

BoundingBox::BoundingBox(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BoundingBox_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:inference.BoundingBox)
}
BoundingBox::BoundingBox(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BoundingBox& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BoundingBox_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BoundingBox::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BoundingBox::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::confidence_));
}
BoundingBox::~BoundingBox() {
  // @@protoc_insertion_point(destructor:inference.BoundingBox)
  SharedDtor(*this);
}
inline void BoundingBox::SharedDtor(MessageLite& self) {
  BoundingBox& this_ = static_cast<BoundingBox&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BoundingBox::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BoundingBox(arena);
}
constexpr auto BoundingBox::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BoundingBox),
                                            alignof(BoundingBox));
}
constexpr auto BoundingBox::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BoundingBox_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BoundingBox::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BoundingBox>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BoundingBox::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BoundingBox>(), &BoundingBox::ByteSizeLong,
              &BoundingBox::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_._cached_size_),
          false,
      },
      &BoundingBox::kDescriptorMethods,
      &descriptor_table_inference_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BoundingBox_class_data_ =
        BoundingBox::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BoundingBox::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BoundingBox_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BoundingBox_class_data_.tc_table);
  return BoundingBox_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
BoundingBox::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BoundingBox_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::BoundingBox>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoundingBox, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.x_)}},
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoundingBox, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.y_)}},
    // int32 width = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoundingBox, _impl_.width_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.width_)}},
    // int32 height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BoundingBox, _impl_.height_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.height_)}},
    // float confidence = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.confidence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.x_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.y_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 width = 3;
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.width_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 height = 4;
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.height_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float confidence = 5;
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.confidence_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.BoundingBox)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.confidence_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.confidence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BoundingBox::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BoundingBox& this_ = static_cast<const BoundingBox&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BoundingBox::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BoundingBox& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:inference.BoundingBox)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_x() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_x(), target);
    }
  }

  // int32 y = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_y() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_y(), target);
    }
  }

  // int32 width = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_width() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_width(), target);
    }
  }

  // int32 height = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_height() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_height(), target);
    }
  }

  // float confidence = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_confidence()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          5, this_._internal_confidence(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.BoundingBox)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BoundingBox::ByteSizeLong(const MessageLite& base) {
  const BoundingBox& this_ = static_cast<const BoundingBox&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BoundingBox::ByteSizeLong() const {
  const BoundingBox& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:inference.BoundingBox)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // int32 x = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_x() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_x());
      }
    }
    // int32 y = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_y() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_y());
      }
    }
    // int32 width = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_width() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_width());
      }
    }
    // int32 height = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_height());
      }
    }
    // float confidence = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_confidence()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BoundingBox::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BoundingBox*>(&to_msg);
  auto& from = static_cast<const BoundingBox&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.BoundingBox)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_x() != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_y() != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_width() != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_confidence()) != 0) {
        _this->_impl_.confidence_ = from._impl_.confidence_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoundingBox::CopyFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BoundingBox::InternalSwap(BoundingBox* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.confidence_)
      + sizeof(BoundingBox::_impl_.confidence_)
      - PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata BoundingBox::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DetectionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DetectionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_._has_bits_);
};

DetectionResponse::DetectionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DetectionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:inference.DetectionResponse)
}
PROTOBUF_NDEBUG_INLINE DetectionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::inference::DetectionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        faces_{visibility, arena, from.faces_},
        frame_id_(arena, from.frame_id_) {}

DetectionResponse::DetectionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DetectionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DetectionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DetectionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, processing_time_ms_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::processing_time_ms_));

  // @@protoc_insertion_point(copy_constructor:inference.DetectionResponse)
}
PROTOBUF_NDEBUG_INLINE DetectionResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        faces_{visibility, arena},
        frame_id_(arena) {}

inline void DetectionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, processing_time_ms_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::processing_time_ms_));
}
DetectionResponse::~DetectionResponse() {
  // @@protoc_insertion_point(destructor:inference.DetectionResponse)
  SharedDtor(*this);
}
inline void DetectionResponse::SharedDtor(MessageLite& self) {
  DetectionResponse& this_ = static_cast<DetectionResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.frame_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DetectionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DetectionResponse(arena);
}
constexpr auto DetectionResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.faces_) +
          decltype(DetectionResponse::_impl_.faces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DetectionResponse), alignof(DetectionResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DetectionResponse::PlacementNew_,
                                 sizeof(DetectionResponse),
                                 alignof(DetectionResponse));
  }
}
constexpr auto DetectionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DetectionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DetectionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DetectionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DetectionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DetectionResponse>(), &DetectionResponse::ByteSizeLong,
              &DetectionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_._cached_size_),
          false,
      },
      &DetectionResponse::kDescriptorMethods,
      &descriptor_table_inference_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DetectionResponse_class_data_ =
        DetectionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DetectionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DetectionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DetectionResponse_class_data_.tc_table);
  return DetectionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 44, 2>
DetectionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DetectionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inference::DetectionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 processing_time_ms = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DetectionResponse, _impl_.processing_time_ms_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.processing_time_ms_)}},
    // repeated .inference.BoundingBox faces = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.faces_)}},
    // int64 timestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DetectionResponse, _impl_.timestamp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.timestamp_)}},
    // string frame_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.frame_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .inference.BoundingBox faces = 1;
    {PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.faces_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string frame_id = 3;
    {PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.frame_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 processing_time_ms = 4;
    {PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.processing_time_ms_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::inference::BoundingBox>()},
  }},
  {{
    "\33\0\0\10\0\0\0\0"
    "inference.DetectionResponse"
    "frame_id"
  }},
};
PROTOBUF_NOINLINE void DetectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.DetectionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.faces_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.frame_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.processing_time_ms_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.processing_time_ms_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DetectionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DetectionResponse& this_ = static_cast<const DetectionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DetectionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DetectionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:inference.DetectionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .inference.BoundingBox faces = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_faces_size());
       i < n; i++) {
    const auto& repfield = this_._internal_faces().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int64 timestamp = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // string frame_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_frame_id().empty()) {
      const ::std::string& _s = this_._internal_frame_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "inference.DetectionResponse.frame_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int64 processing_time_ms = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_processing_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_processing_time_ms(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.DetectionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DetectionResponse::ByteSizeLong(const MessageLite& base) {
  const DetectionResponse& this_ = static_cast<const DetectionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DetectionResponse::ByteSizeLong() const {
  const DetectionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:inference.DetectionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .inference.BoundingBox faces = 1;
    {
      total_size += 1UL * this_._internal_faces_size();
      for (const auto& msg : this_._internal_faces()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string frame_id = 3;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_frame_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_frame_id());
      }
    }
    // int64 timestamp = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // int64 processing_time_ms = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_processing_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_processing_time_ms());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DetectionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DetectionResponse*>(&to_msg);
  auto& from = static_cast<const DetectionResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:inference.DetectionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_faces()->MergeFrom(
      from._internal_faces());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_frame_id().empty()) {
        _this->_internal_set_frame_id(from._internal_frame_id());
      } else {
        if (_this->_impl_.frame_id_.IsDefault()) {
          _this->_internal_set_frame_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_processing_time_ms() != 0) {
        _this->_impl_.processing_time_ms_ = from._impl_.processing_time_ms_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DetectionResponse::CopyFrom(const DetectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.DetectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DetectionResponse::InternalSwap(DetectionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.faces_.InternalSwap(&other->_impl_.faces_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.frame_id_, &other->_impl_.frame_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.processing_time_ms_)
      + sizeof(DetectionResponse::_impl_.processing_time_ms_)
      - PROTOBUF_FIELD_OFFSET(DetectionResponse, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata DetectionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace inference
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_inference_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
